/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: api/grpcdata/grpcdata.proto */

#ifndef PROTOBUF_C_api_2fgrpcdata_2fgrpcdata_2eproto__INCLUDED
#define PROTOBUF_C_api_2fgrpcdata_2fgrpcdata_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "cluster/cluster.pb-c.h"

typedef struct Grpcdata__ClusterUpdateRequest Grpcdata__ClusterUpdateRequest;
typedef struct Grpcdata__ClusterUpdateResponse Grpcdata__ClusterUpdateResponse;
typedef struct Grpcdata__Response Grpcdata__Response;


/* --- enums --- */

typedef enum _Grpcdata__ClusterLbPolicy {
  GRPCDATA__CLUSTER__LB_POLICY__ROUND_ROBIN = 0,
  GRPCDATA__CLUSTER__LB_POLICY__LEAST_CONNECTIONS = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GRPCDATA__CLUSTER__LB_POLICY)
} Grpcdata__ClusterLbPolicy;

/* --- messages --- */

struct  Grpcdata__ClusterUpdateRequest
{
  ProtobufCMessage base;
  char *key;
  Cluster__Cluster *value;
};
#define GRPCDATA__CLUSTER_UPDATE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&grpcdata__cluster_update_request__descriptor) \
    , (char *)protobuf_c_empty_string, NULL }


struct  Grpcdata__ClusterUpdateResponse
{
  ProtobufCMessage base;
  int32_t error_code;
};
#define GRPCDATA__CLUSTER_UPDATE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&grpcdata__cluster_update_response__descriptor) \
    , 0 }


struct  Grpcdata__Response
{
  ProtobufCMessage base;
  char *message;
};
#define GRPCDATA__RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&grpcdata__response__descriptor) \
    , (char *)protobuf_c_empty_string }


/* Grpcdata__ClusterUpdateRequest methods */
void   grpcdata__cluster_update_request__init
                     (Grpcdata__ClusterUpdateRequest         *message);
size_t grpcdata__cluster_update_request__get_packed_size
                     (const Grpcdata__ClusterUpdateRequest   *message);
size_t grpcdata__cluster_update_request__pack
                     (const Grpcdata__ClusterUpdateRequest   *message,
                      uint8_t             *out);
size_t grpcdata__cluster_update_request__pack_to_buffer
                     (const Grpcdata__ClusterUpdateRequest   *message,
                      ProtobufCBuffer     *buffer);
Grpcdata__ClusterUpdateRequest *
       grpcdata__cluster_update_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   grpcdata__cluster_update_request__free_unpacked
                     (Grpcdata__ClusterUpdateRequest *message,
                      ProtobufCAllocator *allocator);
/* Grpcdata__ClusterUpdateResponse methods */
void   grpcdata__cluster_update_response__init
                     (Grpcdata__ClusterUpdateResponse         *message);
size_t grpcdata__cluster_update_response__get_packed_size
                     (const Grpcdata__ClusterUpdateResponse   *message);
size_t grpcdata__cluster_update_response__pack
                     (const Grpcdata__ClusterUpdateResponse   *message,
                      uint8_t             *out);
size_t grpcdata__cluster_update_response__pack_to_buffer
                     (const Grpcdata__ClusterUpdateResponse   *message,
                      ProtobufCBuffer     *buffer);
Grpcdata__ClusterUpdateResponse *
       grpcdata__cluster_update_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   grpcdata__cluster_update_response__free_unpacked
                     (Grpcdata__ClusterUpdateResponse *message,
                      ProtobufCAllocator *allocator);
/* Grpcdata__Response methods */
void   grpcdata__response__init
                     (Grpcdata__Response         *message);
size_t grpcdata__response__get_packed_size
                     (const Grpcdata__Response   *message);
size_t grpcdata__response__pack
                     (const Grpcdata__Response   *message,
                      uint8_t             *out);
size_t grpcdata__response__pack_to_buffer
                     (const Grpcdata__Response   *message,
                      ProtobufCBuffer     *buffer);
Grpcdata__Response *
       grpcdata__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   grpcdata__response__free_unpacked
                     (Grpcdata__Response *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Grpcdata__ClusterUpdateRequest_Closure)
                 (const Grpcdata__ClusterUpdateRequest *message,
                  void *closure_data);
typedef void (*Grpcdata__ClusterUpdateResponse_Closure)
                 (const Grpcdata__ClusterUpdateResponse *message,
                  void *closure_data);
typedef void (*Grpcdata__Response_Closure)
                 (const Grpcdata__Response *message,
                  void *closure_data);

/* --- services --- */

typedef struct Grpcdata__ClusterService_Service Grpcdata__ClusterService_Service;
struct Grpcdata__ClusterService_Service
{
  ProtobufCService base;
  void (*update_cluster)(Grpcdata__ClusterService_Service *service,
                         const Grpcdata__ClusterUpdateRequest *input,
                         Grpcdata__ClusterUpdateResponse_Closure closure,
                         void *closure_data);
};
typedef void (*Grpcdata__ClusterService_ServiceDestroy)(Grpcdata__ClusterService_Service *);
void grpcdata__cluster_service__init (Grpcdata__ClusterService_Service *service,
                                      Grpcdata__ClusterService_ServiceDestroy destroy);
#define GRPCDATA__CLUSTER_SERVICE__BASE_INIT \
    { &grpcdata__cluster_service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define GRPCDATA__CLUSTER_SERVICE__INIT(function_prefix__) \
    { GRPCDATA__CLUSTER_SERVICE__BASE_INIT,\
      function_prefix__ ## update_cluster  }
void grpcdata__cluster_service__update_cluster(ProtobufCService *service,
                                               const Grpcdata__ClusterUpdateRequest *input,
                                               Grpcdata__ClusterUpdateResponse_Closure closure,
                                               void *closure_data);

/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    grpcdata__cluster__lb_policy__descriptor;
extern const ProtobufCMessageDescriptor grpcdata__cluster_update_request__descriptor;
extern const ProtobufCMessageDescriptor grpcdata__cluster_update_response__descriptor;
extern const ProtobufCMessageDescriptor grpcdata__response__descriptor;
extern const ProtobufCServiceDescriptor grpcdata__cluster_service__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_api_2fgrpcdata_2fgrpcdata_2eproto__INCLUDED */
